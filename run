if [ "$1" == "restart" ];then
    printf "\n\n=> Restarting containers..."
    printf "\n\n"
    
    printf "\n\n=> Creating docker network..."
    printf "\n"
    sudo docker network create techwave-internal-net &> /dev/null
    if [ $? -eq 0 ] ; then
        echo "Docker Network created";
    else 
        echo "Could not create docker network";
    fi
    printf "\n"
    
    printf "\n\n=> Cleaning database..."
    printf "\n"
    sudo docker rm -f -v fixermate_postgres_db &> /dev/null
    if [ $? -eq 0 ];then
            echo "Docker Network cleaned";
        else
            echo "Could not clean docker network";
        fi

    printf "\n\n=> Cleaning volume..."
    printf "\n"
    sudo docker volume rm -f fixermate-backend_db_data &> /dev/null
    if [ $? -eq 0 ];then
        echo "Volume cleaned";
    else
        echo "Could not clean volume";
    fi

    sudo docker-compose -f docker-compose.local.yml build --no-cache && sudo docker-compose -f docker-compose.local.yml up
fi

if [ "$1" == "start" ];then
    printf "\n\n=> Starting application..."
    printf "\n\n"
    sudo docker network create techwave-internal-net
    sudo docker-compose -f docker-compose.local.yml up
fi

if [ "$1" == "makemigrations" ]; then
    printf "\n\n=> Running makemigrations inside the container...\n\n"
    
    CONTAINER_STATUS=$(sudo docker inspect -f '{{.State.Status}}' fixermate_backend_api)

    if [ "$CONTAINER_STATUS" == "running" ]; then
        sudo docker exec -it fixermate_backend_api python manage.py makemigrations
        if [ $? -eq 0 ]; then
            echo "Makemigrations completed successfully."
        else
            echo "Failed to run makemigrations."
        fi
    else
        echo "fixermate_backend_api container is not running. Please start the container first."
    fi
fi

if [ "$1" == "migrate" ]; then
    printf "\n\n=> Running migrate inside the container...\n\n"
    
    CONTAINER_STATUS=$(sudo docker inspect -f '{{.State.Status}}' fixermate_backend_api)

    if [ "$CONTAINER_STATUS" == "running" ]; then
        sudo docker exec -it fixermate_backend_api python manage.py migrate
        if [ $? -eq 0 ]; then
            echo "Migration completed successfully."
        else
            echo "Failed to run migrate."
        fi
    else
        echo "fixermate_backend_api container is not running. Please start the container first."
    fi
fi